name: Build and Analyze Servico Processamento | Develop

on:
  push:
    branches:
      - develop
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - '.github/**'
      - '.github/workflows/**'
      - 'domain.puml'
      - 'src/Backend/ServicoProcessamento.Api/appsettings.Development.json'
      - 'src/Backend/ServicoProcessamento.Api/appsettings.json'
      - 'src/Backend/ServicoProcessamento.Api/ServicoProcessamento.Api.http'
jobs:
#  test:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: ⚙️ Setup .NET
#        uses: actions/setup-dotnet@v4
#        with:
#          dotnet-version: 9.x
#
#      - name: 🛠️ Install Coverage Tests
#        run: |
#          dotnet tool install --global dotnet-coverage
#
#      - name: 🧪 Run Tests and Collect Coverage
#        run: dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
#
#      - name: ⬆️ Upload Coverage Report
#        uses: actions/upload-artifact@v3
#        with:
#          name: coverage-report
#          path: coverage.xml

  code-analysis:
#    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: ⚙️ Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - name: 🛠️ Install Sonar Scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: ⬇️ Download Coverage Report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: ▶️ Begin Sonar Cloud Scan
        run: |
          dotnet sonarscanner begin /k:"silviobassi_PesquisaPublica.ServicoProcessamento" \
            /o:"silviobassi" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.vscoveragexml.reportsPaths="coverage.xml"

      - name: 🏗️ Building 
        run: dotnet build --no-incremental

      - name: 🔚 End SonarCloud Scan
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"